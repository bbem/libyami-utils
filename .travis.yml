dist: xenial
sudo: required

language: c++
compiler: g++
os: linux

before_install:
  - test "${TRAVIS_BRANCH}" != 'coverity_scan' -o "${TRAVIS_JOB_NUMBER##*.}" = '1' || exit 0
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  - pip install --user cpp-coveralls
  - sudo apt-get -qq update
  - sudo apt-get install -y build-essential
  - sudo apt-get install -y autoconf
  - sudo apt-get install -y automake
  - sudo apt-get install -y libtool
  - sudo apt-get install -y m4 
  - sudo apt-get install -y lcov
  - sudo apt-get install -y perl
  - sudo apt-get install -y pkg-config
  - sudo apt-get install -y libdrm-dev
  - sudo apt-get install -y autoconf
  - sudo apt-get install -y libegl1-mesa-dev
  - sudo apt-get install -y libgl1-mesa-dev
  - sudo apt-get install -y libwayland-dev
  - sudo apt-get install -y libx11-dev
  - sudo apt-get install -y libxext-dev
  - sudo apt-get install -y libxfixes-dev
  - sudo apt-get install -y intel-gpu-tools
  - sudo apt-get install -y cifs-utils
  - sudo apt-get install -y yasm
  - sudo apt-get install -y libghc-x11-dev
  - sudo apt-get install -y libxmuu-dev 
  - sudo apt-get install -y libxfixes-dev
  - sudo apt-get install -y libxcb-glx0-dev 
  - sudo apt-get install -y libgegl-dev
  - sudo apt-get install -y libcogl-gles2-dev
  - sudo apt-get install -y libv4l-0
  - sudo apt-get install -y libv4l-dev

  -export YAMI_ROOT_DIR="/opt/yami"
  

  -export VAAPI_PREFIX="${YAMI_ROOT_DIR}/vaapi"
  -export LIBYAMI_PREFIX="${YAMI_ROOT_DIR}/libyami"
  -ADD_PKG_CONFIG_PATH="${VAAPI_PREFIX}/lib/pkgconfig/:${LIBYAMI_PREFIX}/lib/pkgconfig/"
  -ADD_LD_LIBRARY_PATH="${VAAPI_PREFIX}/lib/:${LIBYAMI_PREFIX}/lib/"
  -ADD_PATH="${VAAPI_PREFIX}/bin/:${LIBYAMI_PREFIX}/bin/"

  -PLATFORM_ARCH_64=`uname -a | grep x86_64`
  -if [ -n "$PKG_CONFIG_PATH" ]; then
  -    export PKG_CONFIG_PATH="${ADD_PKG_CONFIG_PATH}:$PKG_CONFIG_PATH"
  -elif [ -n "$PLATFORM_ARCH_64" ]; then
  -    export PKG_CONFIG_PATH="${ADD_PKG_CONFIG_PATH}:/usr/lib/pkgconfig/:/usr/lib/i386-linux-gnu/pkgconfig/"
  -else 
  -    export PKG_CONFIG_PATH="${ADD_PKG_CONFIG_PATH}:/usr/lib/pkgconfig/:/usr/lib/x86_64-linux-gnu/pkgconfig/"
  -fi

  -export LD_LIBRARY_PATH="${ADD_LD_LIBRARY_PATH}:$LD_LIBRARY_PATH"

  -export PATH="${ADD_PATH}:$PATH"
  
  
  - git clone https://github.com/01org/libva.git
  - (cd libva && ./autogen.sh && ./configure --prefix=\$VAAPI_PREFIX && sudo make install)
  - git clone https://github.com/01org/libyami.git
  - (cd libyami && ./autogen.sh --prefix=\$VAAPI_PREFIX && make -j8 && make install)


 
install:
  - git clone https://github.com/01org/libyami-utils.git
  - (cd libyami-utils && ./autogen.sh --prefix=/opt/yami && make -j8 && make install)

addons:
  coverity_scan:
    project:
      name: "01org/libyami-utils"
      description: "Build submitted via Travis CI"
    notification_email: 531669721@sjtu.edu.cn
    build_command_prepend: "./autogen.sh; ./configure --prefix=/opt/yami"
    build_command:   "make -j8"
    branch_pattern: coverity_scan

script:
  - if [[ "${COVERITY_SCAN_BRANCH}" == 1 ]];
      then
        echo "Don't build on coverty_scan branch.";
        exit 0;
    fi
  - ./autogen.sh --prefix=/opt/yami
  - make -j8 ; sudo make install

#after_success:
 #       - coveralls --exclude lib --exclude tests --gcov-options '\-lp'

notifications:
# Emails are sent to the committer's git-configured email address by default,
# but only if they have access to the repository.  To enable Travis on your
# public project, just go to travis-ci.org and flip the switch on for
# your project.  To configure your git email address, use:
#     git config --global user.email me@example.com
  email:
    on_success: always
    on_failure: always

# Slack notifications
#


# IRC notifications disabled by default.
# Uncomment next 5 lines to send notifications to chat.freenode.net#caffe
#   irc:
#     channels:
#       - "chat.freenode.net#intel-media"
#     template:
#       - "%{repository}/%{branch} (%{commit} - %{author}): %{message}"
